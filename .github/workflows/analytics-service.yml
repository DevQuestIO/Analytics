name: Analytics Service CI/CD

on:
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.10"
  MONGODB_URI: "mongodb://localhost:27017"
  DB_NAME: "test_devquest"
  REDIS_URL: "redis://localhost:6379/0"
  ENVIRONMENT: "test"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
          
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # - name: Run Lint
    #   run: |
    #     pip install flake8
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run tests with coverage
      run: |
        pytest test_analytics_service.py -v --cov=. --cov-report=xml --cov-report=html
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          coverage.xml
          htmlcov
        retention-days: 14

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/analytics-service:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/analytics-service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Authenticate with AKS using Managed Identity
      run: |
        az login --identity
        az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/analytics analytics=pb2323/analytics-service:latest
        kubectl rollout status deployment/analytics